
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v68=v2(v0(v30,16));if v19 then local v76=0;local v77;while true do if (v76==0) then v77=v5(v68,v19);v19=nil;v76=1;end if (v76==1) then return v77;end end else return v68;end end end);local function v20(v31,v32,v33)if v33 then local v69=(v31/((2 -0)^(v32-(197 -(179 + 17)))))%(2^(((v33-(1 + 0)) -(v32-(1 + 0))) + (1140 -(912 + 227)))) ;return v69-(v69%(1 + 0 + 0)) ;else local v70=0 -0 ;local v71;while true do if (v70==(0 + 0)) then v71=((3463 -(1509 + 226)) -(1066 + 660))^(v32-1) ;return (((v31%(v71 + v71))>=v71) and ((106 -56) -(37 + 12))) or (0 -(0 -0)) ;end end end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + 1 + 1 ;return (v36 * (217 + 39)) + v35 ;end local function v23()local v37,v38,v39,v40=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 3 + 1 ;return (v40 * ((35445069 -(465 + 1169)) -18666219)) + (v39 * (1106 + 15942 + (48583 -(90 + 5)))) + (v38 * (552 -296)) + v37 ;end local function v24()local v41=v23();local v42=v23();local v43=679 -(38 + 640) ;local v44=(v20(v42,1,20) * (2^(508 -(270 + 206)))) + v41 ;local v45=v20(v42,19 + 2 ,1060 -(86 + 155 + 788) );local v46=((v20(v42,143 -111 )==(3 -2)) and  -1) or (1 -0) ;if (v45==(165 -(32 + (202 -69)))) then if (v44==(1311 -(659 + 652))) then return v46 * (1049 -(308 + 741)) ;else v45=1;v43=(214 + 394) -(160 + 448) ;end elseif (v45==(5322 -3275)) then return ((v44==(0 -0)) and (v46 * ((1 -0)/(0 + 0)))) or (v46 * NaN) ;end return v8(v46,v45-(1046 -(11 + 12)) ) * (v43 + (v44/((1 + 1 + 0)^(17 + 35)))) ;end local function v25(v47)local v48;if  not v47 then local v72=(2408 -(756 + 112)) -(820 + 720) ;while true do if (v72==(0 -0)) then v47=v23();if (v47==(1828 -(1041 + 787))) then return "";end break;end end end v48=v3(v16,v18,(v18 + v47) -(3 -2) );v18=v18 + v47 ;local v49={};for v66=2 -1 , #v48 do v49[v66]=v2(v1(v3(v48,v66,v66)));end return v6(v49);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v50=0 -0 ;local v51;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if ((0 -0)~=v50) then else v51=0;v52=nil;v50=1;end if (v50==4) then while true do if (v51~=(1 -0)) then else v54=nil;v55=nil;v51=853 -(750 + 101) ;end if (2==v51) then v56=nil;v57=nil;v51=3;end if (v51==(1 + 2)) then v58=nil;while true do local v84=0;local v85;while true do if (v84~=(0 -0)) then else v85=0;while true do if (v85==(131 -(18 + 113))) then local v105=576 -(325 + 251) ;while true do if (v105==1) then v85=1037 -(892 + 144) ;break;end if (v105==0) then if (v52==1) then v57=v23();v58={};for v111=1 + 0 ,v57 do local v112=0 -0 ;local v113;local v114;local v115;local v116;while true do if (v112~=1) then else v115=nil;v116=nil;v112=2 + 0 ;end if (v112==(0 + 0)) then v113=0;v114=nil;v112=2 -1 ;end if (v112~=2) then else while true do if (v113~=(2 -1)) then else v116=nil;while true do if (v114==0) then local v241=0 -0 ;local v242;while true do if (v241==(551 -(149 + 402))) then v242=832 -(619 + 213) ;while true do if (0==v242) then v115=v21();v116=nil;v242=1;end if (v242~=1) then else v114=1;break;end end break;end end end if (1==v114) then if (v115==(1714 -(1288 + 425))) then v116=v21()~=0 ;elseif (v115==2) then v116=v24();elseif (v115==3) then v116=v25();end v58[v111]=v116;break;end end break;end if (v113==0) then local v227=0;while true do if (v227~=(0 -0)) then else v114=0 + 0 ;v115=nil;v227=1;end if (v227==(1 + 0)) then v113=1835 -(645 + 1189) ;break;end end end end break;end end end v56[10 -7 ]=v21();v52=2;end if (v52==2) then local v110=0;while true do if (v110==1) then for v117=1,v23() do v55[v117]=v23();end return v56;end if (v110==0) then for v119=1 + 0 ,v23() do local v120=0 + 0 ;local v121;local v122;while true do if (v120==(1 + 0)) then while true do if ((1034 -(618 + 416))==v121) then v122=v21();if (v20(v122,1468 -(633 + 834) ,98 -(28 + 69) )~=0) then else local v269=1736 -(1392 + 344) ;local v270;local v271;local v272;local v273;while true do if (v269~=0) then else v270=1731 -(969 + 762) ;v271=nil;v269=1 + 0 ;end if (v269==1) then local v311=442 -(403 + 39) ;while true do if (0==v311) then v272=nil;v273=nil;v311=1;end if (v311==1) then v269=8 -6 ;break;end end end if (v269==(1372 -(604 + 766))) then while true do if (v270==(5 -3)) then local v342=1572 -(614 + 958) ;local v343;while true do if (v342==0) then v343=0;while true do if (v343==(0 + 0)) then if (v20(v272,4 -3 ,1 + 0 )==1) then v273[818 -(754 + 62) ]=v58[v273[119 -(45 + 72) ]];end if (v20(v272,2,2 -0 )==1) then v273[11 -8 ]=v58[v273[3]];end v343=2 -1 ;end if (v343~=1) then else v270=2 + 1 ;break;end end break;end end end if (v270==3) then if (v20(v272,858 -(670 + 185) ,3)==1) then v273[611 -(307 + 300) ]=v58[v273[4 + 0 ]];end v53[v119]=v273;break;end if (1==v270) then local v345=0;local v346;while true do if ((1811 -(1304 + 507))==v345) then v346=0 + 0 ;while true do if ((0 -0)==v346) then v273={v22(),v22(),nil,nil};if (v271==(1578 -(1357 + 221))) then local v374=1866 -(1689 + 177) ;local v375;while true do if (v374~=(1695 -(1021 + 674))) then else v375=1645 -(1133 + 512) ;while true do if (v375~=(0 + 0)) then else v273[3]=v22();v273[18 -14 ]=v22();break;end end break;end end elseif (v271==1) then v273[3]=v23();elseif (v271==(2 -0)) then v273[10 -7 ]=v23() -((2 + 0)^(14 + 2)) ;elseif (v271~=(1 + 2)) then else local v382=0 + 0 ;while true do if (v382~=0) then else v273[3]=v23() -((1 + 1)^(33 -17)) ;v273[4]=v22();break;end end end v346=1;end if (v346==(1 -0)) then v270=2;break;end end break;end end end if (v270==(0 -0)) then local v347=0 -0 ;local v348;while true do if (v347~=(0 + 0)) then else v348=0;while true do if (v348==0) then v271=v20(v122,2,458 -(378 + 77) );v272=v20(v122,4 + 0 ,6);v348=1359 -(433 + 925) ;end if (v348==(1 + 0)) then v270=1;break;end end break;end end end end break;end end end break;end end break;end if (v120==(597 -(540 + 57))) then v121=0;v122=nil;v120=1;end end end for v123=1,v23() do v54[v123-(2 -1) ]=v28();end v110=1 + 0 ;end end end v105=1 + 0 ;end end end if (v85==(2 -1)) then if (v52~=(737 -(378 + 359))) then else local v106=0;while true do if (v106~=(1 -0)) then else v55={};v56={v53,v54,nil,v55};v106=363 -(271 + 90) ;end if (v106==0) then v53={};v54={};v106=1681 -(381 + 1299) ;end if (v106~=(2 + 0)) then else v52=1;break;end end end break;end end break;end end end break;end if (v51~=0) then else v52=0 -0 ;v53=nil;v51=1;end end break;end if (v50==1) then v53=nil;v54=nil;v50=2;end if (v50==(4 -1)) then v57=nil;v58=nil;v50=4;end if (v50~=2) then else v55=nil;v56=nil;v50=3;end end end local function v29(v59,v60,v61)local v62=0;local v63;local v64;local v65;while true do if (v62==1) then v65=v59[3];return function(...)local v78=0;local v79;local v80;local v81;local v82;local v83;while true do if (v78==0) then v79=1;v80= -1;v78=1;end if (v78==1) then v81={...};v82=v12("#",...) -1 ;v78=2;end if (v78==2) then v83=nil;function v83()local v86=v63;local v87=v64;local v88=v65;local v89=v27;local v90={};local v91={};local v92={};for v96=0 -0 ,v82 do if ((v96>=v88) or ((1584 -(301 + 842))>=(15703 -11948))) then v90[v96-v88 ]=v81[v96 + ((10 -6) -3) ];else v92[v96]=v81[v96 + 1 + 0 ];end end local v93=(v82-v88) + (3 -2) + 0 ;local v94;local v95;while true do local v97=1196 -((2219 -(345 + 688)) + 10) ;while true do if (((2834 + 950)>(2222 -1678)) and (v97==(0 + 0))) then local v104=34 -((313 -(252 + 55)) + 28) ;while true do if (((1830 + 1969)>=(3094 -1985)) and (v104==(741 -(717 + (43 -20))))) then v97=1 + 0 ;break;end if ((v104==(1627 -(203 + 1424))) or ((4692 -(226 + 551))==(6647 -(112 + 1790)))) then v94=v86[v79];v95=v94[1];v104=2 -1 ;end end end if (((5211 -3048)>716) and ((1 + 0)==v97)) then if (((34 + 70)<=(809 + 4049)) and (v95<=(1838 -(1305 + 514)))) then if ((2015>363) and (v95<=((524 -(310 + 207)) + 2))) then if (((5472 -(1397 + 44))>=2661) and (v95<=(708 -(628 + 76)))) then if ((v95<=(2 -1)) or ((1405 -(527 + 138))<=(98 + 267))) then if (((303 + 841)==(507 + 637)) and (v95>(0 + 0))) then v92[v94[2]]=v61[v94[3]];elseif (v92[v94[2]] or ((4818 -((1763 -(318 + 1366)) + 1848))==(155 -92))) then v79=v79 + 1 ;else v79=v94[580 -(259 + 318) ];end elseif ((v95<=(1 + 1)) or ((2455 + 491)>=2962)) then local v127=0 + 0 ;local v128;local v129;local v130;local v131;while true do if ((v127==(1 + 0)) or ((4460 -2417)>(3594 -(425 + 147)))) then v130=nil;v131=nil;v127=2 -0 ;end if ((v127==(3 -1)) or ((1909 + 220 + 104)<=(675 + 433))) then while true do if ((((859 -(676 + 65)) -91)<(5836 -(1801 + 33))) and (v128==(1370 -(464 + 906)))) then local v244=0 + 0 ;while true do if ((v244==(1922 -(1746 + 176))) or ((3911 -(433 + 697))<(304 + 540))) then v129=v94[2 -(0 + 0) ];v130=v92[v129 + (2 -0) ];v244=1 + 0 ;end if ((v244==(1630 -(1567 + 62))) or (2690>((1312 + 7311) -4856))) then v128=1;break;end end end if (((3637 -(66 + 353))>(3002 -(1112 + 368))) and (v128==(1040 -(1020 + (65 -47))))) then if ((v130>(0 + 0)) or (2811<(387 + 303))) then if ((v131<=v92[v129 + 1 ]) or ((708 + 291)>(8227 -(5441 -(167 + 41))))) then local v304=555 -(254 + (482 -181)) ;local v305;local v306;while true do if (((3905 -(706 + 135))==3064) and (v304==(4 -3))) then while true do if (((16095 -11977)<(9066 -4517)) and (v305==(0 + 0))) then v306=0 -0 ;while true do if (((4602 -(51 + 533))>1901) and ((0 -0)==v306)) then v79=v94[8 -(7 -2) ];v92[v129 + (1131 -(752 + 376)) ]=v131;break;end end break;end end break;end if ((v304==0) or ((3910 -(552 + 886))>(744 + 1924))) then v305=0 + 0 ;v306=nil;v304=625 -(419 + 205) ;end end end elseif ((v131>=v92[v129 + (350 -(85 + 264)) ]) or (4409>(5063 -(432 + 211)))) then local v307=0 + 0 ;while true do if ((v307==(1267 -(279 + 988))) or ((10514 -7586)<=(455 -(90 + 316)))) then v79=v94[3];v92[v129 + (1572 -(932 + 637)) ]=v131;break;end end end break;end if ((v128==(394 -(214 + 179))) or (3749<3570)) then local v245=0;while true do if ((v245==(0 -0)) or ((716 + 2351)==(4470 -(435 + 644)))) then v131=v92[v129] + v130 ;v92[v129]=v131;v245=1140 -((994 -719) + 864) ;end if (((14410 -9578)>=(2957 -(749 + (73 -35)))) and (1==v245)) then v128=4 -2 ;break;end end end end break;end if ((v127==(371 -(100 + 271))) or ((4924 -(58 + (254 -169)))<((5511 -(622 + 908)) + 589))) then v128=0 -0 ;v129=nil;v127=1303 -(1125 + 22 + 155) ;end end elseif ((v95==(11 -8)) or ((4004 -(170 + 24))==2258)) then v61[v94[(3 + 3) -3 ]]=v92[v94[(7 + 2) -(137 -(129 + 1)) ]];else local v183=0 + 0 ;local v184;local v185;local v186;local v187;while true do if (((3443 -995)<(4115 + 672)) and (v183==2)) then while true do if (((389 -(99 + 52))<(734 + 1446)) and (v184==(0 + 0))) then local v274=1064 -(165 + 899) ;while true do if (((4250 -2210)==(4126 -2086)) and (v274==0)) then v185=v94[(1023 -630) -(28 + 363) ];v186=v92[v185];v274=1;end if ((1==v274) or (((8261 -5496) -(3829 -1654))>(766 + 695))) then v184=2 -1 ;break;end end end if (((70 + 112)==(800 -618)) and (v184==(1 -0))) then v187=v94[(928 + 579) -(663 + 841) ];for v287=92 -(4 + 87) ,v187 do v186[v287]=v92[v185 + v287 ];end break;end end break;end if (((93 + 795)==(737 + 151)) and (v183==(1 + 0))) then v186=nil;v187=nil;v183=2;end if (((27 -9)<(2506 -((2465 -(784 + 668)) + 715))) and (v183==0)) then v184=1424 -(1128 + 296) ;v185=nil;v183=2 -1 ;end end end elseif ((v95<=(4 + 2)) or (4910<=(3893 + 1014))) then if ((v95==(9 -4)) or ((1799 + 83)>=3293)) then if (((5617 -2343)>=(1068 + 827)) and (v92[v94[2 -0 ]]==v92[v94[(11 + 2) -9 ]])) then v79=v79 + 1 + 0 ;else v79=v94[1151 -(632 + 516) ];end else v92[v94[4 -2 ]]=v60[v94[(3162 -(1196 + 641)) -(1170 + 152) ]];end elseif ((v95<=(3 + 4)) or ((1222 -(148 + 558))==(11396 -8055))) then do return v92[v94[4 -2 ]];end elseif (((3968 -(1102 + 388))>1721) and (v95>(6 + 2))) then v92[v94[122 -(35 + 85) ]]=v94[3];else for v228=v94[2],v94[8 -5 ] do v92[v228]=nil;end end elseif ((2172==2172) and (v95<=(23 -9))) then if (((3110 -1116)<=(4122 + 174)) and (v95<=(41 -30))) then if ((v95==(3 + 1 + 6)) or (471==(4473 -(36 + 388)))) then if (((9959 -6332)==(2028 + 1599)) and (v92[v94[(703 -(341 + 361)) + 1 ]]==v94[2 + 2 ])) then v79=v79 + (1949 -(1637 + (484 -173))) ;else v79=v94[5 -2 ];end elseif ((v92[v94[2 + 0 ]]~=v92[v94[4]]) or ((5253 -((2320 -1761) + 177))<=(239 + 1298))) then v79=v79 + 1 ;else v79=v94[11 -8 ];end elseif (((1104 -(983 + 35))<287) and (v95<=12)) then local v134=0 -0 ;local v135;local v136;local v137;local v138;while true do if (((2844 + 1196)>(1815 -(66 + 88))) and (v134==0)) then v135=1358 -(1310 + 48) ;v136=nil;v134=1 + 0 ;end if (((202 + 1935)<(3704 -(589 + 91))) and (v134==2)) then while true do if ((v135==(1 + 0 + 0)) or ((2087 -1408)>(3286 -556))) then v138=nil;while true do if ((v136==(1 + 0 + 0)) or ((3572 -2678)<=(27 + 288))) then for v308=v137 + 1 + 0 ,v94[3] do v7(v138,v92[v308]);end break;end if (((2963 -((3522 -1957) + 269))==(1598 -(278 + 191))) and (v136==0)) then local v290=0 + 0 ;local v291;while true do if (((5223 -(1426 + 138 + 30))==(5352 -(284 + 1439))) and ((0 -0)==v290)) then v291=0 + 0 + 0 ;while true do if ((v291==(1742 -(763 + 978))) or ((4485 -(1104 + 260))>=(3188 + 1551))) then v136=350 -(129 + (343 -123)) ;break;end if (((4801 -(1610 + 45))>(1517 + 649)) and (v291==(0 + 0))) then local v349=0 -0 ;while true do if ((v349==((0 -0) -0)) or ((2656 -(1286 + 109))>=(9564 -6171))) then v137=v94[3 -1 ];v138=v92[v137];v349=1 + 0 ;end if ((v349==(2 -1)) or ((5301 -(108 + (1875 -635)))<=((2051 -(915 + 604)) + 191))) then v291=566 -((242 -159) + 482) ;break;end end end end break;end end end end break;end if ((v135==((397 + 285) -(581 + 101))) or ((13279 -8362)<=(2407 -((424 -(85 + 82)) + 221)))) then local v246=0;while true do if ((((3929 + 37) -(1465 + 68))<=(3594 -(241 + 124))) and (v246==(0 + 0))) then v136=0 + 0 ;v137=nil;v246=2 -1 ;end if ((504<(5067 -(515 + 988))) and (v246==(4 -3))) then v135=1;break;end end end end break;end if ((863<=(55 + 2737)) and (v134==(1 + 0))) then v137=nil;v138=nil;v134=2;end end elseif ((v95==13) or ((2698 -(47 + 666))<1252)) then v79=v94[11 -8 ];else local v194=555 -(79 + 476) ;local v195;local v196;while true do if (((3670 -1918)==(3080 -(509 + 819))) and (v194==(1 + 0))) then while true do if ((v195==(719 -(39 + 680))) or ((5509 -2859)==(9128 -6008))) then v196=v94[9 -7 ];v92[v196](v92[v196 + (4 -3) ]);break;end end break;end if (((1198 + 235)<(2827 -(337 + 1031))) and (v194==(0 + 0))) then v195=(373 -(294 + 79)) -0 ;v196=nil;v194=1;end end end elseif ((((6898 -(1346 + 520)) -(1097 + 705))<=(615 + 3648)) and (v95<=(39 -23))) then if (((6592 -4193)<=(10143 -7028)) and (v95==(222 -(164 + 43)))) then if (((1397 -661)>(1920 -(648 + 1169))) and (v92[v94[(1151 -(596 + 553)) -0 ]]~=v94[2 + 2 ])) then v79=v79 + (1930 -(1923 + 6)) ;else v79=v94[1 + 2 ];end else do return;end end elseif ((((10023 -(146 + 48)) -(18727 -12244))==(1977 + 1369)) and (v95<=(7 + 10))) then local v139=0;local v140;while true do if ((0==v139) or ((2982 + 108)>4602)) then v140=v94[1 + 1 ];v92[v140]=v92[v140](v92[v140 + (2 -1) ]);break;end end elseif ((v95>18) or ((1890 + 1294)<(2083 + 1016))) then local v198=0;local v199;local v200;while true do if (((9368 -5928)>(4061 -(26 + 1306))) and (v198==(0 + 0))) then v199=0 + 0 ;v200=nil;v198=1;end if ((2046<((3920 + 5866) -6845)) and (v198==(1225 -(1037 + 187)))) then while true do if ((v199==(563 -(487 + 76))) or (809>(649 + 1770))) then v200=v94[7 -5 ];v92[v200]=v92[v200]();break;end end break;end end else v92[v94[1470 -(68 + 1400) ]]=v94[1428 -(846 + 579) ]~=(651 -(436 + 215)) ;end elseif (((1938 + 1868 + 253)>=(3880 -(1332 + 121))) and (v95<=(1166 -(391 + 746)))) then if ((v95<=(1598 -(196 + 1378))) or (((9321 -6169) -(196 + 933))<(2673 -(2816 -1111)))) then if (((2087 -510)<1606) and (v95<=((107 -52) -34))) then if ((563<(4524 -(68 + 8))) and (v95==(304 -(265 + 19)))) then local v141=907 -((609 -(90 + 170)) + 558) ;local v142;local v143;local v144;local v145;local v146;local v147;while true do if ((v141==(2 + (180 -(108 + 71)))) or (((775 + 4919) -(1179 + 130))<(771 + 1100))) then while true do if ((v142==(1639 -(1438 + 201))) or (3674<1413)) then local v247=0 -0 ;while true do if ((v247==(0 + 0 + 0)) or ((8374 -4549)<(4890 -(603 + 999)))) then v143=0;v144=nil;v247=1;end if ((v247==(3 -2)) or (3824==(1383 + 2426))) then v142=1;break;end end end if (((19 + 77 + 1759)>(2227 -1744)) and (v142==1)) then v145=nil;v146=nil;v142=2;end if ((v142==(220 -(179 + 39))) or ((2397 -1402)>(3484 -(866 + 979)))) then v147=nil;while true do if ((v143==(1305 -(752 + 553))) or (513==4651)) then local v292=(1462 -(366 + 1096)) -0 ;local v293;while true do if ((3992>(3131 -1753)) and (v292==(0 + 0))) then v293=1453 -(1011 + 442) ;while true do if ((v293==(1 -0)) or ((1115 -(27 + 94))>(1281 + (993 -(130 + 139))))) then v143=1 + (1730 -(1358 + 372)) ;break;end if ((v293==(0 -0)) or ((149 + 2560)>4123)) then v144=v94[2];v145,v146=v89(v92[v144](v13(v92,v144 + (1088 -(80 + 1007)) ,v94[3])));v293=(1 + 0) -0 ;end end break;end end end if ((((8883 + 1949) -8255)>=(1981 -(1162 + (1783 -1227)))) and (v143==(4 -2))) then for v309=v144,v80 do local v310=0;while true do if (((7429 -4620)<=(3349 + 1003)) and (v310==(0 -0))) then v147=v147 + (3 -2) ;v92[v309]=v145[v147];break;end end end break;end if (((1048 + 1593)==(1666 + 975)) and (v143==(1880 -((3826 -3060) + (2964 -(105 + 1746)))))) then local v294=0;local v295;while true do if ((v294==0) or ((2469 + (886 -526))<(397 -(84 + 213)))) then v295=0;while true do if ((v295==0) or ((420 + 142)>=(14533 -11224))) then v80=(v146 + v144) -(1 + 0) ;v147=0 + 0 ;v295=1;end if ((v295==1) or (((14011 -(71 + 27)) -9879)<(8638 -5723))) then v143=1 + 1 ;break;end end break;end end end end break;end end break;end if (((4088 -(145 + 64 + 1221))>=(2174 -(215 + 225 + 1421))) and (v141==((0 -0) + 0))) then v142=0 + 0 ;v143=nil;v141=1 + 0 ;end if ((v141==(935 -(703 + 231))) or ((9493 -6991)<(2401 -(8 + (7 -5))))) then v144=nil;v145=nil;v141=2 + 0 ;end if (((11869 -7507)>=(10818 -8613)) and (v141==(6 -4))) then v146=nil;v147=nil;v141=3;end end else v92[v94[1204 -(1182 + 20) ]]();end elseif (((1 + 3)==4) and (v95<=(42 -20))) then local v148=0 + 0 ;local v149;local v150;while true do if ((v148==(1 -0)) or ((1112 + 1820)<553)) then while true do if (((4168 -2680)>=341) and (v149==0)) then v150=v94[537 -(518 + 17) ];v92[v150]=v92[v150](v13(v92,v150 + 1 ,v94[3]));break;end end break;end if (((12918 -8712)>=(786 -(462 + 26))) and (v148==((1340 -(7 + 1333)) + 0))) then v149=0 -(205 -(185 + 20)) ;v150=nil;v148=1;end end elseif (((3323 -(468 + (85 -(15 + 7))))<3155) and (v95==(11 + 12))) then local v202=v94[671 -(58 + 611) ];local v203=v94[4];local v204=v202 + (1801 -(784 + (4000 -2985))) ;local v205={v92[v202](v92[v202 + (1 -0) ],v92[v204])};for v232=1 + 0 ,v203 do v92[v204 + v232 ]=v205[v232];end local v206=v205[1 + 0 ];if (v206 or ((13843 -10479)==4102)) then local v237=0;local v238;local v239;while true do if (((131 + 875)==(1950 -(854 + 90))) and (v237==(193 -(78 + 114)))) then while true do if (((14715 -10754)==3961) and (v238==((1881 -(148 + 315)) -(958 + 460)))) then v239=0 + 0 ;while true do if (((1906 -(88 + 632))<(2441 + 2315)) and (v239==(459 -(423 + 36)))) then v92[v204]=v206;v79=v94[11 -8 ];break;end end break;end end break;end if ((4416>(219 -136)) and (v237==(0 + 0))) then v238=0 -0 ;v239=nil;v237=1;end end else v79=v79 + 1 + 0 ;end else v92[v94[2]][v94[9 -6 ]]=v94[4 + 0 ];end elseif (((1179 -(527 + 47))<=(1566 + 1073)) and (v95<=26)) then if ((v95==(35 -10)) or ((1153 + 322)>(1156 + 1579))) then local v151=0 -0 ;local v152;local v153;local v154;local v155;local v156;while true do if ((((1746 -(138 + 960)) + 186)<=((1026 -788) + 772)) and (v151==(2 + 0))) then v156=nil;while true do if ((562<=(9346 -6049)) and (v152==2)) then for v262=v153,v80 do local v263=0 -0 ;local v264;while true do if (((2036 + 1087)>(4483 -1824)) and (v263==(0 -0))) then v264=0 -0 ;while true do if ((v264==(1765 -(1054 + 711))) or (2139<=1083)) then v156=v156 + (488 -(213 + 274)) ;v92[v262]=v154[v156];break;end end break;end end end break;end if (((1898 -(425 + 149))<=(1989 -(399 + 102))) and (v152==(1408 -(310 + 1097)))) then local v250=0 + 0 ;while true do if (((4 -3)==v250) or ((3604 -(1500 + 271))>(3667 -(553 + 1073)))) then v152=3 -1 ;break;end if ((v250==0) or (4459<(2106 -1095))) then v80=(v155 + v153) -(2 -1) ;v156=0 -0 ;v250=3 -2 ;end end end if ((v152==(0 + 0)) or ((3823 -(643 + 356))>(11601 -8056))) then local v251=0 + 0 ;while true do if (((394 + 3833 + 101)>(3523 -(215 + 153))) and (v251==0)) then v153=v94[5 -3 ];v154,v155=v89(v92[v153](v92[v153 + 1 ]));v251=1;end if (((2865 + 745)<=3689) and (v251==(1 + 0))) then v152=1;break;end end end end break;end if ((v151==(0 -0)) or ((2092 -1362)>=(7773 -3681))) then v152=(0 -0) -0 ;v153=nil;v151=985 -(286 + 698) ;end if ((v151==(1 + 0)) or ((4225 -((2285 -1664) + 488))<=(4590 -1686))) then v154=nil;v155=nil;v151=2;end end else local v157=1420 -(607 + 813) ;local v158;local v159;local v160;while true do if ((v157==(0 -0)) or ((5161 -((1495 -1067) + 67 + 1270))<=(472 + 1503))) then v158=0;v159=nil;v157=1 -(1809 -(115 + 1694)) ;end if (((4996 -3187)<=(635 + 3802)) and (v157==(1 + 0))) then v160=nil;while true do if ((v158==(1 + 0)) or ((665 + 248)==(3501 -(596 + 661)))) then v92[v159 + (1650 -(1532 + 117)) ]=v160;v92[v159]=v160[v94[3 + 1 ]];break;end if ((3283<=(761 + 1579 + 1301)) and (v158==0)) then v159=v94[2 + 0 ];v160=v92[v94[2 + 1 ]];v158=(1335 -(813 + 521)) + 0 ;end end break;end end end elseif (((6204 -2634)>(2463 -(191 + 73))) and (v95<=27)) then local v161=0 + 0 ;local v162;local v163;local v164;while true do if (((2185 -(650 + 1243))<(6595 -(1558 + 405))) and (v161==0)) then local v235=913 -(42 + 871) ;while true do if (((7704 -3702)==(1206 + 2796)) and (v235==((2 -0) -1))) then v161=1 + 0 ;break;end if (((197 + 116)<=(3231 -(473 + 1487))) and (v235==(1038 -(188 + 850)))) then v162=v94[1 + 1 ];v163=v92[v162];v235=1 + 0 ;end end end if ((v161==(1 + 0)) or ((272 + (1136 -(483 + 359)))>=2955)) then v164=v92[v162 + (7 -(186 -(98 + 83))) ];if (((19227 -15329)==3898) and (v164>(0 -0))) then if ((v163>v92[v162 + 1 ]) or ((911 + 602)>(5294 -(37 + 1531)))) then v79=v94[1 + 2 ];else v92[v162 + (6 -3) ]=v163;end elseif ((v163<v92[v162 + (949 -(445 + 503)) ]) or ((717 -231)>((6002 -(12 + 969)) -3338))) then v79=v94[1 + 2 ];else v92[v162 + 3 ]=v163;end break;end end elseif ((v95==28) or ((1119 + 76)>=(4439 -(179 + 1192)))) then local v209=0 + 0 ;local v210;local v211;local v212;local v213;local v214;while true do if (((2510 -(305 + 934))<=(925 + 2370)) and (v209==((2058 -(980 + 295)) -(506 + 277)))) then v210=1196 -(558 + 429 + 209) ;v211=nil;v209=2 -1 ;end if (((1700 -961)==((1420 -(633 + 130)) + 82)) and ((1 + 0)==v209)) then v212=nil;v213=nil;v209=649 -((695 -439) + 391) ;end if (((87 + 3319)>(3782 -(560 + (2364 -(1722 + 12))))) and (((3 -1) + 0)==v209)) then v214=nil;while true do if ((v210==(901 -(208 + 631 + 62))) or ((4629 -((1208 -537) + 303))<(1155 -686))) then local v279=0 + 0 + 0 ;while true do if ((v279==(2 -1)) or ((8424 -5517)<70)) then v210=(3 + 1) -3 ;break;end if ((v279==(0 -0)) or (90<=(876 -(611 + 248)))) then v211=0;v212=nil;v279=1 + 0 ;end end end if ((v210==(1 -0)) or ((2734 -1146)<(1427 -1050))) then local v280=0;while true do if ((v280==(1955 -(571 + 1384))) or ((225 + 671)>=1015)) then v213=nil;v214=nil;v280=1 + 0 ;end if (((555 -(106 + 149))==(643 -(51 + 292))) and (v280==(2 -(1 -0)))) then v210=2;break;end end end if (((691 -446)<=((648 + 2006) -1728)) and (v210==(5 -3))) then while true do if ((v211==(0 + 0)) or ((1330 + 1036)>4081)) then local v314=(0 -0) + 0 ;local v315;while true do if (((4562 -(94 + 921))<(1191 + 3452)) and (v314==(0 -0))) then v315=0 -0 ;while true do if (((3647 -(848 + 374))<=(2179 + 543)) and (v315==(4 -3))) then v211=3 -2 ;break;end if ((v315==(0 -0)) or ((1250 + 1143)>=(2667 -(36 + 27)))) then local v355=0 + 0 + 0 ;while true do if (((948 -648)==300) and (v355==(292 -(78 + 214)))) then v212=v94[2 + 0 ];v213={v92[v212](v13(v92,v212 + (3 -2) ,v80))};v355=1 + 0 ;end if ((1==v355) or ((1602 -(2016 -(1224 + 39)))<=101)) then v315=1711 -(737 + 973) ;break;end end end end break;end end end if ((1==v211) or ((3626 -(383 + 341))<=(7162 -4489))) then v214=0 -0 ;for v317=v212,v94[14 -10 ] do local v318=159 -(91 + 68) ;local v319;local v320;while true do if ((1622==(3030 -(4431 -3023))) and (v318==(1815 -(341 + 1474)))) then v319=(2741 -(545 + 1117)) -(117 + 962) ;v320=nil;v318=1;end if ((v318==(364 -(330 + 33))) or ((2514 + 302 + 113)==(118 + 1831))) then while true do if ((v319==(0 + 0)) or ((2760 -(597 + 1259))==(1904 -((1615 -(1057 + 51)) + 120)))) then v320=0;while true do if ((3550<(11466 -7636)) and (v320==(1700 -(120 + 1580)))) then v214=v214 + 1 + 0 ;v92[v317]=v213[v214];break;end end break;end end break;end end end break;end end break;end end break;end end else v92[v94[2]]=v29(v87[v94[3]],nil,v61);end elseif ((1959>(3404 -2568)) and (v95<=(1075 -(671 + 370)))) then if ((v95<=31) or (2638==(1990 -643))) then if ((2184<=4790) and (v95>(493 -(437 + 26)))) then local v165=0 -0 ;local v166;local v167;local v168;while true do if ((v165==((3550 -(885 + 802)) -(1131 + 732))) or (((15929 -(614 + 828)) -9889)<=4243)) then v166=(2220 -1247) -(686 + 287) ;v167=nil;v165=1 + 0 ;end if (((2734 -(294 + 492))<(2211 + 1186)) and (1==v165)) then v168=nil;while true do if (((0 + 0)==v166) or ((3921 -2967)>((3094 -(1094 + 597)) + 1648))) then local v259=0 -0 ;while true do if ((v259==1) or ((1565 + 46)>=(4095 + 592))) then v166=(1560 -(896 + 663)) + 0 ;break;end if (((2745 -(1209 + 545))<(4823 -(1295 + 645))) and (v259==(0 + 0))) then v167=0 + 0 ;v168=nil;v259=1 -0 ;end end end if ((((28140 -20924) -3617)>=(1177 + (375 -(200 + 148)))) and (v166==(1 + 0))) then while true do if ((v167==(1015 -(923 + 92))) or ((2073 -(686 + 1168))>=1430)) then v168=v94[1968 -(1436 + 530) ];v92[v168]=v92[v168](v13(v92,v168 + (506 -((68 -38) + 475)) ,v80));break;end end break;end end break;end end else local v169=1337 -((2579 -1258) + 16) ;local v170;local v171;local v172;while true do if ((v169==((1441 -(1309 + 132)) -0)) or ((2447 + 1597)<(1388 -681))) then v170=1090 -(139 + 951) ;v171=nil;v169=2 -1 ;end if (((373 + 323)<=(6619 -2369)) and (v169==(1 + 0))) then v172=nil;while true do if ((((17178 -12136) -(678 + 405))==(5702 -(174 + 1569))) and (v170==0)) then local v260=(0 -0) -0 ;while true do if (((4665 -((1023 -(451 + 554)) + 176))==(196 + 1708 + 2567)) and (v260==0)) then v171=0 + 0 ;v172=nil;v260=1 + 0 ;end if ((v260==1) or (((5480 -(63 + 894)) -(824 + 173))<(325 + 3059))) then v170=2 -1 ;break;end end end if ((v170==(4 -3)) or ((2318 -1266)>(2849 -(501 + 587)))) then while true do if ((v171==0) or ((2597 -(466 + 1267))>(9431 -5536))) then v172=v94[1 + 1 ];v92[v172](v13(v92,v172 + 1 + 0 ,v94[7 -4 ]));break;end end break;end end break;end end end elseif (((5951 -(325 + (1663 -(5 + 75))))<(5243 -(695 + 181))) and (v95<=(101 -69))) then v92[v94[6 -4 ]]=v92[v94[1770 -(61 + 1706) ]][v94[4]];elseif (((456 + 3094)<(2330 + 1862)) and (v95==33)) then v92[v94[(1550 -(225 + 1324)) + (1259 -(168 + 1090)) ]]= #v92[v94[3 + 0 ]];elseif ((v94[5 -3 ]==v92[v94[(474 + 906) -(1347 + 26 + 3) ]]) or ((2794 -770)<=497)) then v79=v79 + (1 -0) ;else v79=v94[5 -2 ];end elseif (((2647 + (2812 -(36 + 949)))<(12228 -7386)) and (v95<=(499 -(230 + 232)))) then if ((((8697 -6725) -(489 + 446))<(1263 + 521)) and (v95<=35)) then local v175=0;local v176;local v177;while true do if ((4955>=(1779 + 2611)) and ((0 + 0)==v175)) then v176=0 -0 ;v177=nil;v175=1;end if (((2500 -1143)<=(4708 -(502 + 1250))) and ((1 + (0 -0))==v175)) then while true do if ((v176==((0 -0) + 0)) or ((1104 + 3393)==(3730 -((2959 -(875 + 720)) + 130)))) then v177=v94[2 + 0 ];do return v13(v92,v177,v177 + v94[572 -(155 + 414) ] );end break;end end break;end end elseif (((618 + 332)==(458 + 492)) and (v95>36)) then v92[v94[2]]=v92[v94[3]][v92[v94[212 -(153 + 55) ]]];else v92[v94[5 -3 ]][v94[8 -5 ]]=v92[v94[1 + (3 -0) ]];end elseif ((v95<=(68 -(1925 -(567 + 1328)))) or ((144 + 3067)>=4319)) then v92[v94[79 -(38 + 39) ]]=v92[v94[2 + 1 ]];elseif (((423 + 570)<(5494 -(211 + 762))) and (v95>39)) then v92[v94[2 -0 ]]={};else local v222=0 -(705 -(622 + 83)) ;local v223;local v224;local v225;local v226;while true do if ((v222==(1 + 1)) or ((6093 -1424)==(6183 -(1220 + 97)))) then while true do if ((v223==0) or (2027<=1862)) then local v281=0;while true do if ((605<=(1864 -(6 + 233))) and (0==v281)) then v224=v87[v94[(26 -12) -11 ]];v225=nil;v281=2 -(1 + 0) ;end if ((v281==(1 + 0)) or ((1804 -(321 + 1009))<=(134 + 30))) then v223=1;break;end end end if ((v223==(2 -1)) or ((7217 -4127)>(10714 -6070))) then local v282=0 -0 ;while true do if (((396 + 268)<=((3292 -2577) + 2114)) and (v282==(854 -(406 + (726 -279))))) then v223=1 + 1 ;break;end if ((v282==(0 + 0)) or ((2701 -1837)==(13546 -10218))) then v226={};v225=v10({},{__index=function(v321,v322)local v323=0;local v324;local v325;local v326;while true do if (((1310 + 1250)<(4430 -(603 + 1155))) and (v323==(0 -0))) then v324=0 -0 ;v325=nil;v323=1;end if (((519 -((227 -121) + 229))<(6311 -(1331 + 326))) and (v323==(340 -(15 + 324)))) then v326=nil;while true do if ((2952>(340 + 1251)) and (v324==(540 -(215 + 325)))) then local v360=0;while true do if ((1949<(7464 -5040)) and (v360==(0 -0))) then v325=0 + 0 ;v326=nil;v360=441 -(198 + 242) ;end if ((v360==(1 + 0)) or ((15788 -12362)<=(13102 -9714))) then v324=1 + 0 ;break;end end end if ((v324==1) or ((297 + 20)>2385)) then while true do if (((363 + 1258)<=(15670 -(41354 -29334))) and (v325==0)) then local v367=0;while true do if (((1424 + 839)>=(662 + 150 + 217)) and (v367==(0 + 0))) then local v377=1014 -(271 + 743) ;while true do if (((0 -0)==v377) or ((553 + 1756)>=(4308 + 391))) then v326=v226[v322];return v326[1][v326[362 -(31 + 329) ]];end end end end end end break;end end break;end end end,__newindex=function(v327,v328,v329)local v330=(5462 -3985) -(678 + 799) ;local v331;local v332;local v333;while true do if ((v330==(1 + 0)) or ((526 + 668)<(1102 -(132 + 500)))) then v333=nil;while true do if ((v331==(1 + 0)) or ((207 + (6890 -4497))<=1186)) then while true do if (((2431 + 468 + 744)>(4707 -(2932 + 618))) and (v332==(0 -0))) then v333=v226[v328];v333[1][v333[2]]=v329;break;end end break;end if (((2293 + 1991)>=2372) and (v331==(0 -0))) then local v361=340 -(118 + 222) ;while true do if (((254 + 902)<(6471 -(996 + 791))) and (v361==(1 -0))) then v331=1 + 0 ;break;end if ((1749==(2580 -831)) and (v361==((4739 -2949) -(300 + 1490)))) then v332=254 -(36 + 218) ;v333=nil;v361=1;end end end end break;end if ((v330==(1810 -(892 + 918))) or ((3929 -(956 + 326))<(2263 -(11 + 156)))) then v331=0 -0 ;v332=nil;v330=1 + 0 ;end end end});v282=2 -1 ;end end end if (((173 -(161 + 10))==v223) or ((6915 -(8220 -6058))<=(3488 -(6 + 50)))) then for v300=1,v94[11 -7 ] do local v301=793 -(572 + 221) ;local v302;local v303;while true do if (((2772 -(7375 -5297))<=(5025 -(192 + 91))) and (v301==0)) then v302=0 + 0 ;v303=nil;v301=1 + 0 ;end if (((1042 + 600)==(3113 -(316 + (1679 -524)))) and (v301==(1 -0))) then while true do if (((1461 -(161 + 269))>(6 -(1544 -(487 + 1053)))) and (v302==0)) then v79=v79 + (2 -1) ;v303=v86[v79];v302=1;end if ((v302==1) or ((4388 -(443 + (2481 -(1125 + 857))))==385)) then if (((3168 -(156 + 71))<(3352 + (1131 -(713 + 332)))) and (v303[1 -(1183 -(1078 + 105)) ]==(25 + 13))) then v226[v300-((1249 -(57 + 1191)) + 0) ]={v92,v303[(1 + 5) -3 ]};else v226[v300-(1 + 0) ]={v60,v303[161 -(129 + 29) ]};end v91[ #v91 + (2 -1) ]=v226;break;end end break;end end end v92[v94[1296 -(121 + 650 + 523) ]]=v29(v224,v225,v61);break;end end break;end if ((v222==(0 -0)) or ((1542 -(27 + 307 + 217))==1388)) then v223=0 -0 ;v224=nil;v222=1 -0 ;end if ((v222==(1399 -(910 + 488))) or ((4633 -(192 + 98))>(5414 -(132 + 266 + 253)))) then v225=nil;v226=nil;v222=2;end end end v79=v79 + (871 -(56 + 814)) ;break;end end end end v78=3;end if (v78==3) then A,B=v27(v11(v83));if  not A[1] then local v98=0;local v99;while true do if (v98==0) then v99=v59[4][v79] or "?" ;error("Script error at ["   .. v99   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end break;end end end;end if (v62==0) then v63=v59[1];v64=v59[2];v62=1;end end end return v29(v28(),{},v17)(...);end vv9(),...);end
